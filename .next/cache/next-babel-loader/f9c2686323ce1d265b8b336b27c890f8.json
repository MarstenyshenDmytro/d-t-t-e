{"ast":null,"code":"import { END } from \"redux-saga\";\nimport { useRouter } from \"next/router\";\nimport { wrapper } from \"../../redux/store/store\";\nimport { fetchPost } from \"../../redux/actions/post\";\nimport { getPostsListAPI } from \"../../api/getPostsListAPI\";\n\nconst PostPage = () => {\n  const router = useRouter();\n  console.log(router.query.postId);\n  return null;\n};\n\nexport const getStaticPaths = async () => {\n  const posts = await getPostsListAPI();\n  console.log(posts);\n  const paths = posts.map(post => ({\n    params: {\n      postId: post.id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = wrapper.getServerSideProps(async ({\n  params: {\n    postId\n  },\n  store\n}) => {\n  console.log(postId);\n\n  if (!store.getState().postReducer.data) {\n    store.dispatch(fetchPost(postId));\n    store.dispatch(END);\n  }\n\n  await store.sagaTask.toPromise();\n});\nexport default PostPage;","map":{"version":3,"sources":["D:/Dima/d-t-t-e/pages/posts/[postId].ts"],"names":["END","useRouter","wrapper","fetchPost","getPostsListAPI","PostPage","router","console","log","query","postId","getStaticPaths","posts","paths","map","post","params","id","toString","fallback","getStaticProps","getServerSideProps","store","getState","postReducer","data","dispatch","sagaTask","toPromise"],"mappings":"AAEA,SAASA,GAAT,QAAoB,YAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAmC,yBAAnC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,eAAT,QAAgC,2BAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,KAAP,CAAaC,MAAzB;AACA,SAAO,IAAP;AACD,CAJD;;AAMA,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAMC,KAAK,GAAG,MAAMR,eAAe,EAAnC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAWC,IAAD,KAAW;AACjCC,IAAAA,MAAM,EAAE;AAAEN,MAAAA,MAAM,EAAEK,IAAI,CAACE,EAAL,CAAQC,QAAR;AAAV;AADyB,GAAX,CAAV,CAAd;AAIA,SAAO;AAAEL,IAAAA,KAAF;AAASM,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD,CARM;AAUP,OAAO,MAAMC,cAA8B,GAAGlB,OAAO,CAACmB,kBAAR,CAC5C,OAAO;AAAEL,EAAAA,MAAM,EAAE;AAAEN,IAAAA;AAAF,GAAV;AAAsBY,EAAAA;AAAtB,CAAP,KAAyC;AACvCf,EAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;;AACA,MAAI,CAACY,KAAK,CAACC,QAAN,GAAiBC,WAAjB,CAA6BC,IAAlC,EAAwC;AACtCH,IAAAA,KAAK,CAACI,QAAN,CAAevB,SAAS,CAACO,MAAD,CAAxB;AACAY,IAAAA,KAAK,CAACI,QAAN,CAAe1B,GAAf;AACD;;AAED,QAAOsB,KAAD,CAAqBK,QAArB,CAA8BC,SAA9B,EAAN;AACD,CAT2C,CAAvC;AAYP,eAAevB,QAAf","sourcesContent":["import React from \"react\";\r\nimport { GetStaticPaths, GetStaticProps } from \"next\";\r\nimport { END } from \"redux-saga\";\r\nimport { useRouter } from \"next/router\";\r\nimport { wrapper, SagaStore } from \"../../redux/store/store\";\r\nimport { fetchPost } from \"../../redux/actions/post\";\r\nimport { getPostsListAPI } from \"../../api/getPostsListAPI\";\r\n\r\nconst PostPage = () => {\r\n  const router = useRouter();\r\n  console.log(router.query.postId);\r\n  return null;\r\n};\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  const posts = await getPostsListAPI();\r\n  console.log(posts);\r\n  const paths = posts.map((post) => ({\r\n    params: { postId: post.id.toString() },\r\n  }));\r\n\r\n  return { paths, fallback: false };\r\n};\r\n\r\nexport const getStaticProps: GetStaticProps = wrapper.getServerSideProps(\r\n  async ({ params: { postId }, store }) => {\r\n    console.log(postId);\r\n    if (!store.getState().postReducer.data) {\r\n      store.dispatch(fetchPost(postId));\r\n      store.dispatch(END as any);\r\n    }\r\n\r\n    await (store as SagaStore).sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default PostPage;\r\n"]},"metadata":{},"sourceType":"module"}