{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(workerSaga);\n\nimport { FETCH_POSTS_LIST, successPostsList } from \"../../actions/postsList\";\nimport { getPostsListAPI } from \"../../../api/getPostsListAPI\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport postsListSaga from \"./postsListSaga\";\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest(FETCH_POSTS_LIST, postsListSaga);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction workerSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function workerSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(getPostsListAPI);\n\n        case 3:\n          data = _context2.sent;\n          _context2.next = 6;\n          return put(successPostsList(data));\n\n        case 6:\n          _context2.next = 10;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}","map":{"version":3,"sources":["D:/Dima/d-t-t-e/redux/middlewares/sagas/rootSaga.ts"],"names":["rootSaga","workerSaga","FETCH_POSTS_LIST","successPostsList","getPostsListAPI","call","put","takeLatest","postsListSaga","data"],"mappings":";;oDAOyBA,Q;qDAIfC,U;;AAXV,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,yBAAnD;AACA,SAASC,eAAT,QAAgC,8BAAhC;AAEA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAiD,oBAAjD;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,SAAUR,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMO,UAAU,CAACL,gBAAD,EAAmBM,aAAnB,CAAhB;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIf,SAAUP,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMI,IAAI,CAACD,eAAD,CAAV;;AAFjB;AAEUK,UAAAA,IAFV;AAAA;AAGI,iBAAMH,GAAG,CAACH,gBAAgB,CAACM,IAAD,CAAjB,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { FETCH_POSTS_LIST, successPostsList } from \"../../actions/postsList\";\r\nimport { getPostsListAPI } from \"../../../api/getPostsListAPI\";\r\n\r\nimport { call, put, takeLatest, all, fork } from \"redux-saga/effects\";\r\n\r\nimport postsListSaga from \"./postsListSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield takeLatest(FETCH_POSTS_LIST, postsListSaga);\r\n}\r\n\r\nfunction* workerSaga() {\r\n  try {\r\n    const data = yield call(getPostsListAPI);\r\n    yield put(successPostsList(data));\r\n  } catch (e) {}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}