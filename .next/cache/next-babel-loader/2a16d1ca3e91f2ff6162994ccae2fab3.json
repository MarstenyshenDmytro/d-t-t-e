{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Dima\\\\d-t-t-e\\\\components\\\\Post\\\\Post.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"../Link\";\nimport Comment from \"./Comment/Comment\";\nimport { PostContainer, PostContent, Header, Title, PostId, PostText } from \"./styledComponents\";\n\nvar Post = function Post(_ref) {\n  var title = _ref.title,\n      body = _ref.body,\n      id = _ref.id,\n      comments = _ref.comments;\n  return __jsx(PostContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }\n  }, __jsx(Link, {\n    text: \"back\",\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }), __jsx(PostContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, title), __jsx(PostId, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Post: \".concat(id))), __jsx(PostText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, body)), comments.reverse().map(function (_ref2) {\n    var id = _ref2.id,\n        postId = _ref2.postId,\n        body = _ref2.body;\n    return __jsx(Comment, {\n      id: id,\n      postId: postId,\n      body: body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    });\n  }));\n};\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/Dima/d-t-t-e/components/Post/Post.tsx"],"names":["React","Link","Comment","PostContainer","PostContent","Header","Title","PostId","PostText","Post","title","body","id","comments","reverse","map","postId"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAGA,SACEC,aADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,QANF,QAOO,oBAPP;;AASA,IAAMC,IAAwB,GAAG,SAA3BA,IAA2B;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,IAAV,QAAUA,IAAV;AAAA,MAAgBC,EAAhB,QAAgBA,EAAhB;AAAA,MAAoBC,QAApB,QAAoBA,QAApB;AAAA,SAC/B,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQH,KAAR,CADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBE,EAAlB,EAFF,CADF,EAKE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWD,IAAX,CALF,CAFF,EASGE,QAAQ,CAACC,OAAT,GAAmBC,GAAnB,CAAuB;AAAA,QAAGH,EAAH,SAAGA,EAAH;AAAA,QAAOI,MAAP,SAAOA,MAAP;AAAA,QAAeL,IAAf,SAAeA,IAAf;AAAA,WACtB,MAAC,OAAD;AAAS,MAAA,EAAE,EAAEC,EAAb;AAAiB,MAAA,MAAM,EAAEI,MAAzB;AAAiC,MAAA,IAAI,EAAEL,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB;AAAA,GAAvB,CATH,CAD+B;AAAA,CAAjC;;KAAMF,I;AAgBN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport Link from \"../Link\";\r\n\r\nimport Comment from \"./Comment/Comment\";\r\n\r\nimport { DataType } from \"../../redux/actions/post\";\r\nimport {\r\n  PostContainer,\r\n  PostContent,\r\n  Header,\r\n  Title,\r\n  PostId,\r\n  PostText,\r\n} from \"./styledComponents\";\r\n\r\nconst Post: React.FC<DataType> = ({ title, body, id, comments }) => (\r\n  <PostContainer>\r\n    <Link text=\"back\" href=\"/\" />\r\n    <PostContent>\r\n      <Header>\r\n        <Title>{title}</Title>\r\n        <PostId>{`Post: ${id}`}</PostId>\r\n      </Header>\r\n      <PostText>{body}</PostText>\r\n    </PostContent>\r\n    {comments.reverse().map(({ id, postId, body }) => (\r\n      <Comment id={id} postId={postId} body={body} />\r\n    ))}\r\n  </PostContainer>\r\n);\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}