{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { successPost, errorPost } from \"../../actions/post\";\nimport { getPostAPI } from \"../../../api/getPostAPI\";\nimport { call, put } from \"redux-saga/effects\";\n\nfunction postSaga(_ref) {\n  var id, res;\n  return _regeneratorRuntime.wrap(function postSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = _ref.payload.id;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(getPostAPI, id);\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return put(successPost(_objectSpread(_objectSpread({}, res), {}, {\n            comments: res.comments.reverse()\n          })));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 13;\n          return put(errorPost());\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 9]]);\n}\n\nexport default postSaga;","map":{"version":3,"sources":["D:/Dima/d-t-t-e/redux/middlewares/saga/postSaga.ts"],"names":["postSaga","successPost","errorPost","getPostAPI","call","put","id","payload","res","comments","reverse"],"mappings":";;;oDAKUA,Q;;;;;;AALV,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;;AAGA,SAAUL,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCM,UAAAA,EAAhC,QAAqBC,OAArB,CAAgCD,EAAhC;AAAA;AAAA;AAEgB,iBAAMF,IAAI,CAACD,UAAD,EAAaG,EAAb,CAAV;;AAFhB;AAEUE,UAAAA,GAFV;AAAA;AAII,iBAAMH,GAAG,CAACJ,WAAW,iCAAMO,GAAN;AAAWC,YAAAA,QAAQ,EAAED,GAAG,CAACC,QAAJ,CAAaC,OAAb;AAArB,aAAZ,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMI,iBAAML,GAAG,CAACH,SAAS,EAAV,CAAT;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeF,QAAf","sourcesContent":["import { successPost, errorPost } from \"../../actions/post\";\r\nimport { getPostAPI } from \"../../../api/getPostAPI\";\r\nimport { call, put } from \"redux-saga/effects\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nfunction* postSaga({ payload: { id } }: AnyAction) {\r\n  try {\r\n    const res = yield call(getPostAPI, id);\r\n    // const data = { ...res, comments: res.comments.reverse() };\r\n    yield put(successPost({ ...res, comments: res.comments.reverse() }));\r\n  } catch (e) {\r\n    yield put(errorPost());\r\n  }\r\n}\r\n\r\nexport default postSaga;\r\n"]},"metadata":{},"sourceType":"module"}