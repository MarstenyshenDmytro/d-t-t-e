{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Dima\\\\d-t-t-e\\\\components\\\\form\\\\Field\\\\Field.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { FieldContainer, Label } from \"./styledComponent\";\n\nvar Field = function Field(_ref) {\n  _s();\n\n  var name = _ref.name,\n      label = _ref.label,\n      placeholder = _ref.placeholder,\n      errors = _ref.errors,\n      register = _ref.register,\n      Component = _ref.component,\n      validator = _ref.validator;\n  var error = errors[name];\n\n  var _useState = useState(false),\n      isFocus = _useState[0],\n      setIsFocus = _useState[1];\n\n  var handleControl = function handleControl() {\n    setIsFocus(!isFocus);\n  };\n\n  var classes = useCallback(function (mainClass) {\n    return error && !isFocus ? \"\".concat(mainClass, \" \").concat(mainClass, \"_error\") : mainClass;\n  }, [error, isFocus]);\n  return __jsx(FieldContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, label && __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, label), __jsx(\"div\", {\n    className: classes(\"field__input\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Component, {\n    name: name,\n    placeholder: placeholder,\n    handleControl: handleControl,\n    register: register,\n    isFocus: isFocus,\n    validator: validator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, error && !isFocus && error.message));\n};\n\n_s(Field, \"0JKsLAYk5WiqKTsS1Tn1h5ysmkM=\");\n\n_c = Field;\nexport default Field;\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["D:/Dima/d-t-t-e/components/form/Field/Field.tsx"],"names":["React","useState","useCallback","FieldContainer","Label","Field","name","label","placeholder","errors","register","Component","component","validator","error","isFocus","setIsFocus","handleControl","classes","mainClass","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,mBAAtC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAQR;AAAA;;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFOC,SAEP,QAFJC,SAEI;AAAA,MADJC,SACI,QADJA,SACI;AACJ,MAAMC,KAAK,GAAGL,MAAM,CAACH,IAAD,CAApB;;AADI,kBAE0BL,QAAQ,CAAC,KAAD,CAFlC;AAAA,MAEGc,OAFH;AAAA,MAEYC,UAFZ;;AAIJ,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,MAAMG,OAAO,GAAGhB,WAAW,CACzB,UAACiB,SAAD;AAAA,WACEL,KAAK,IAAI,CAACC,OAAV,aAAuBI,SAAvB,cAAoCA,SAApC,cAAwDA,SAD1D;AAAA,GADyB,EAGzB,CAACL,KAAD,EAAQC,OAAR,CAHyB,CAA3B;AAMA,SACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,IAAI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CADZ,EAEE;AAAK,IAAA,SAAS,EAAEW,OAAO,CAAC,cAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,IAAI,EAAEZ,IADR;AAEE,IAAA,WAAW,EAAEE,WAFf;AAGE,IAAA,aAAa,EAAES,aAHjB;AAIE,IAAA,QAAQ,EAAEP,QAJZ;AAKE,IAAA,OAAO,EAAEK,OALX;AAME,IAAA,SAAS,EAAEF,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,KAAK,IAAI,CAACC,OAAV,IAAqBD,KAAK,CAACM,OAA/B,CAZF,CADF;AAgBD,CAtCD;;GAAMf,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\n\r\nimport { FieldContainer, Label } from \"./styledComponent\";\r\n\r\nconst Field = ({\r\n  name,\r\n  label,\r\n  placeholder,\r\n  errors,\r\n  register,\r\n  component: Component,\r\n  validator,\r\n}) => {\r\n  const error = errors[name];\r\n  const [isFocus, setIsFocus] = useState(false);\r\n\r\n  const handleControl = () => {\r\n    setIsFocus(!isFocus);\r\n  };\r\n\r\n  const classes = useCallback(\r\n    (mainClass) =>\r\n      error && !isFocus ? `${mainClass} ${mainClass}_error` : mainClass,\r\n    [error, isFocus]\r\n  );\r\n\r\n  return (\r\n    <FieldContainer>\r\n      {label && <Label>{label}</Label>}\r\n      <div className={classes(\"field__input\")}>\r\n        <Component\r\n          name={name}\r\n          placeholder={placeholder}\r\n          handleControl={handleControl}\r\n          register={register}\r\n          isFocus={isFocus}\r\n          validator={validator}\r\n        />\r\n      </div>\r\n      <p>{error && !isFocus && error.message}</p>\r\n    </FieldContainer>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n"]},"metadata":{},"sourceType":"module"}