{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dima\\\\d-t-t-e\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport Test from \"../components/Test\";\nimport { END } from \"redux-saga\";\nimport { wrapper } from \"../redux/store/store\";\nimport { fetchPostsList } from \"../redux/actions/postsList\";\n\nfunction HomePage(props) {\n  console.log(\"DOROW\", props);\n  let a;\n  a = 10;\n  console.log(a);\n  return __jsx(Test, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  });\n}\n\nexport const getStaticProps = wrapper.getStaticProps(async ({\n  store\n}) => {\n  if (!store.getState().data) {\n    store.dispatch(fetchPostsList());\n    store.dispatch(END);\n  }\n\n  await store.sagaTask.toPromise();\n});\nexport const getServerSideProps = wrapper.getServerSideProps(async (_ref) => {\n  let {\n    store,\n    req,\n    res\n  } = _ref,\n      etc = _objectWithoutProperties(_ref, [\"store\", \"req\", \"res\"]);\n\n  try {\n    //const data = await getPostsListAPI();\n    await store.dispatch(fetchPostsList());\n  } catch (e) {}\n});\nexport default HomePage;","map":{"version":3,"sources":["D:/Dima/d-t-t-e/pages/index.tsx"],"names":["React","Test","END","wrapper","fetchPostsList","HomePage","props","console","log","a","getStaticProps","store","getState","data","dispatch","sagaTask","toPromise","getServerSideProps","req","res","etc","e"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,IAAP,MAAiB,oBAAjB;AAGA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,OAAT,QAAmC,sBAAnC;AAEA,SAASC,cAAT,QAAiD,4BAAjD;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA,MAAIG,CAAJ;AACAA,EAAAA,CAAC,GAAG,EAAJ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACA,SAAO,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,OAAO,MAAMC,cAAc,GAAGP,OAAO,CAACO,cAAR,CAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACxE,MAAI,CAACA,KAAK,CAACC,QAAN,GAAiBC,IAAtB,EAA4B;AAC1BF,IAAAA,KAAK,CAACG,QAAN,CAAeV,cAAc,EAA7B;AACAO,IAAAA,KAAK,CAACG,QAAN,CAAeZ,GAAf;AACD;;AAED,QAAOS,KAAD,CAAqBI,QAArB,CAA8BC,SAA9B,EAAN;AACD,CAP6B,CAAvB;AAQP,OAAO,MAAMC,kBAAkB,GAAGd,OAAO,CAACc,kBAAR,CAChC,gBAAuC;AAAA,MAAhC;AAAEN,IAAAA,KAAF;AAASO,IAAAA,GAAT;AAAcC,IAAAA;AAAd,GAAgC;AAAA,MAAVC,GAAU;;AACrC,MAAI;AACF;AACA,UAAMT,KAAK,CAACG,QAAN,CAAeV,cAAc,EAA7B,CAAN;AACD,GAHD,CAGE,OAAOiB,CAAP,EAAU,CAAE;AACf,CAN+B,CAA3B;AASP,eAAehB,QAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Test from \"../components/Test\";\r\nimport { getPostsListAPI } from \"../api/getPostsListAPI\";\r\n\r\nimport { END } from \"redux-saga\";\r\nimport { wrapper, SagaStore } from \"../redux/store/store\";\r\n\r\nimport { fetchPostsList, successPostsList } from \"../redux/actions/postsList\";\r\n\r\nfunction HomePage(props) {\r\n  console.log(\"DOROW\", props);\r\n  let a: number;\r\n  a = 10;\r\n  console.log(a);\r\n  return <Test></Test>;\r\n}\r\n\r\nexport const getStaticProps = wrapper.getStaticProps(async ({ store }) => {\r\n  if (!store.getState().data) {\r\n    store.dispatch(fetchPostsList());\r\n    store.dispatch(END as any);\r\n  }\r\n\r\n  await (store as SagaStore).sagaTask.toPromise();\r\n});\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async ({ store, req, res, ...etc }) => {\r\n    try {\r\n      //const data = await getPostsListAPI();\r\n      await store.dispatch(fetchPostsList());\r\n    } catch (e) {}\r\n  }\r\n);\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}