{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport postsList from \"../reducers/postsList\";\nimport rootSaga from \"../middlewares/sagas/index\";\nexport const makeStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(postsList, applyMiddleware(sagaMiddleware));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["D:/Dima/d-t-t-e/redux/store/store.ts"],"names":["applyMiddleware","createStore","createSagaMiddleware","createWrapper","postsList","rootSaga","makeStore","context","sagaMiddleware","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAAoD,OAApD;AACA,OAAOC,oBAAP,MAA2C,YAA3C;AACA,SAAoBC,aAApB,QAAkD,oBAAlD;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAMA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAsB;AAC7C,QAAMC,cAAc,GAAGN,oBAAoB,EAA3C;AACA,QAAMO,KAAK,GAAGR,WAAW,CAACG,SAAD,EAAYJ,eAAe,CAACQ,cAAD,CAA3B,CAAzB;AACCC,EAAAA,KAAD,CAAqBC,QAArB,GAAgCF,cAAc,CAACG,GAAf,CAAmBN,QAAnB,CAAhC;AAEA,SAAOI,KAAP;AACD,CANM;AAQP,OAAO,MAAMG,OAAO,GAAGT,aAAa,CAACG,SAAD,EAAY;AAAEO,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import { applyMiddleware, createStore, Store } from \"redux\";\r\nimport createSagaMiddleware, { Task } from \"redux-saga\";\r\nimport { MakeStore, createWrapper, Context } from \"next-redux-wrapper\";\r\n\r\nimport postsList from \"../reducers/postsList\";\r\nimport rootSaga from \"../middlewares/sagas/index\";\r\n\r\nexport interface SagaStore extends Store {\r\n  sagaTask?: Task;\r\n}\r\n\r\nexport const makeStore = (context: Context) => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(postsList, applyMiddleware(sagaMiddleware));\r\n  (store as SagaStore).sagaTask = sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n\r\nexport const wrapper = createWrapper(makeStore, { debug: true });\r\n"]},"metadata":{},"sourceType":"module"}