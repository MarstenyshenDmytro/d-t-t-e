{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dima\\\\d-t-t-e\\\\pages\\\\_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { wrapper } from \"../redux/store/store\";\nimport { successPostsList } from \"../redux/actions/postsList\";\nimport { getPostsListAPI } from \"../api/getPostsListAPI\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nconst GlobalStyle = createGlobalStyle`\n  body {\n    padding: 0;\n    margin: 0;\n  \n    & * {\n      box-sizing: border-box;\n    }\n  }\n  }\n`;\nconst PageLayout = styled.div.withConfig({\n  displayName: \"_app__PageLayout\",\n  componentId: \"sc-1dvual3-0\"\n})([\"display:grid;grid-template-rows:auto 1fr auto;margin:0 50px;\"]);\nconst MainContent = styled.div.withConfig({\n  displayName: \"_app__MainContent\",\n  componentId: \"sc-1dvual3-1\"\n})([\"min-height:100vh;\"]);\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => __jsx(PageLayout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, __jsx(GlobalStyle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}), __jsx(Header, {\n  title: \"Blog\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}), __jsx(MainContent, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, __jsx(Component, _extends({}, pageProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}))), __jsx(Footer, {\n  text: \"FOOTER\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }\n}));\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (_ref) => {\n  let {\n    store,\n    req,\n    res\n  } = _ref,\n      etc = _objectWithoutProperties(_ref, [\"store\", \"req\", \"res\"]);\n\n  try {\n    const data = await getPostsListAPI();\n    store.dispatch(successPostsList(data));\n  } catch (e) {}\n});\nexport default wrapper.withRedux(MyApp);","map":{"version":3,"sources":["D:/Dima/d-t-t-e/pages/_app.tsx"],"names":["wrapper","successPostsList","getPostsListAPI","styled","createGlobalStyle","Header","Footer","GlobalStyle","PageLayout","div","MainContent","MyApp","Component","pageProps","getServerSideProps","store","req","res","etc","data","dispatch","e","withRedux"],"mappings":";;;;;;;;;;AACA,SAASA,OAAT,QAAwB,sBAAxB;AAEA,SAAyBC,gBAAzB,QAAiD,4BAAjD;AACA,SAASC,eAAT,QAAgC,wBAAhC;AAEA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,WAAW,GAAGH,iBAAkB;;;;;;;;;;CAAtC;AAYA,MAAMI,UAAU,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,oEAAhB;AAMA,MAAMC,WAAW,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,yBAAjB;;AAIA,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACZ,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,MAAD;AAAQ,EAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,CAHF,EAME,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,CADF;;AAWA,OAAO,MAAMC,kBAAkB,GAAGd,OAAO,CAACc,kBAAR,CAChC,gBAAuC;AAAA,MAAhC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA;AAAd,GAAgC;AAAA,MAAVC,GAAU;;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMjB,eAAe,EAAlC;AACAa,IAAAA,KAAK,CAACK,QAAN,CAAenB,gBAAgB,CAACkB,IAAD,CAA/B;AACD,GAHD,CAGE,OAAOE,CAAP,EAAU,CAAE;AACf,CAN+B,CAA3B;AASP,eAAerB,OAAO,CAACsB,SAAR,CAAkBX,KAAlB,CAAf","sourcesContent":["import type { AppProps } from \"next/app\";\r\nimport { wrapper } from \"../redux/store/store\";\r\n\r\nimport { fetchPostsList, successPostsList } from \"../redux/actions/postsList\";\r\nimport { getPostsListAPI } from \"../api/getPostsListAPI\";\r\n\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n  \r\n    & * {\r\n      box-sizing: border-box;\r\n    }\r\n  }\r\n  }\r\n`;\r\n\r\nconst PageLayout = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto 1fr auto;\r\n  margin: 0 50px;\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst MyApp = ({ Component, pageProps }: AppProps) => (\r\n  <PageLayout>\r\n    <GlobalStyle />\r\n    <Header title=\"Blog\" />\r\n    <MainContent>\r\n      <Component {...pageProps} />\r\n    </MainContent>\r\n    <Footer text=\"FOOTER\" />\r\n  </PageLayout>\r\n);\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  async ({ store, req, res, ...etc }) => {\r\n    try {\r\n      const data = await getPostsListAPI();\r\n      store.dispatch(successPostsList(data));\r\n    } catch (e) {}\r\n  }\r\n);\r\n\r\nexport default wrapper.withRedux(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}