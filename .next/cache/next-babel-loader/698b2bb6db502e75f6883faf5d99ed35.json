{"ast":null,"code":"var PostPage = function PostPage() {\n  return;\n};\n\n_c = PostPage;\nexport var __N_SSG = true;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["D:/Dima/d-t-t-e/pages/posts/[postId].ts"],"names":["PostPage"],"mappings":"AAUA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB;AACD,CAFD;;KAAMA,Q;;AAyBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { GetStaticPaths, GetStaticProps } from \"next\";\r\nimport { END } from \"redux-saga\";\r\nimport { useRouter } from \"next/router\";\r\nimport { wrapper, SagaStore } from \"../../redux/store/store\";\r\nimport { fetchPost } from \"../../redux/actions/post\";\r\nimport { getPostsListAPI } from \"../../api/getPostsListAPI\";\r\n\r\nimport Test from \"../../components/Test\";\r\n\r\nconst PostPage = () => {\r\n  return;\r\n};\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  const posts = await getPostsListAPI();\r\n  console.log(posts);\r\n  const paths = posts.map((post) => ({\r\n    params: { postId: post.id.toString() },\r\n  }));\r\n\r\n  return { paths, fallback: false };\r\n};\r\n\r\nexport const getStaticProps: GetStaticProps = wrapper.getServerSideProps(\r\n  async ({ params: { postId }, store }) => {\r\n    if (!store.getState().postReducer.data) {\r\n      store.dispatch(fetchPost(postId as string));\r\n      store.dispatch(END as any);\r\n    }\r\n\r\n    await (store as SagaStore).sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default PostPage;\r\n"]},"metadata":{},"sourceType":"module"}