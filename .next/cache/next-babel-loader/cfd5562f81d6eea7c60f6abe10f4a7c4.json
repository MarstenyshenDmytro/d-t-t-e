{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\n\nvar PostPage = function PostPage() {\n  _s();\n\n  var router = useRouter();\n  console.log(router.query.postId);\n  return null;\n};\n\n_s(PostPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = PostPage;\nexport var __N_SSG = true;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["D:/Dima/d-t-t-e/pages/posts/[postId].ts"],"names":["useRouter","PostPage","router","console","log","query","postId"],"mappings":";;AAGA,SAASA,SAAT,QAA0B,aAA1B;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,MAAMC,MAAM,GAAGF,SAAS,EAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,KAAP,CAAaC,MAAzB;AACA,SAAO,IAAP;AACD,CAJD;;GAAML,Q;UACWD,S;;;KADXC,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { GetStaticPaths, GetStaticProps } from \"next\";\r\nimport { END } from \"redux-saga\";\r\nimport { useRouter } from \"next/router\";\r\nimport { wrapper, SagaStore } from \"../../redux/store/store\";\r\nimport { fetchPost } from \"../../redux/actions/post\";\r\nimport { getPostsListAPI } from \"../../api/getPostsListAPI\";\r\n\r\nconst PostPage = () => {\r\n  const router = useRouter();\r\n  console.log(router.query.postId);\r\n  return null;\r\n};\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  const posts = await getPostsListAPI();\r\n  console.log(posts);\r\n  const paths = posts.map((post) => ({\r\n    params: { postId: post.id.toString() },\r\n  }));\r\n\r\n  return { paths, fallback: false };\r\n};\r\n\r\nexport const getStaticProps: GetStaticProps = wrapper.getServerSideProps(\r\n  async ({ params: { postId }, store }) => {\r\n    // console.log(id);\r\n    if (!store.getState().postReducer.data) {\r\n      store.dispatch(fetchPost(postId));\r\n      store.dispatch(END as any);\r\n    }\r\n\r\n    await (store as SagaStore).sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default PostPage;\r\n"]},"metadata":{},"sourceType":"module"}