{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dima\\\\d-t-t-e\\\\pages\\\\posts\\\\[postId].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { END } from \"redux-saga\";\nimport { wrapper } from \"../../redux/store/store\";\nimport { fetchPost } from \"../../redux/actions/post\";\nimport { getPostsListAPI } from \"../../api/getPostsListAPI\";\nimport PostDetails from \"../../containers/PostDetails\";\n\nconst PostPage = () => __jsx(PostDetails, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 24\n  }\n});\n\nexport const getStaticPaths = async () => {\n  const posts = await getPostsListAPI();\n  console.log(posts);\n  const paths = posts.map(post => ({\n    params: {\n      postId: post.id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = wrapper.getServerSideProps(async ({\n  params: {\n    postId\n  },\n  store\n}) => {\n  if (!store.getState().postReducer.data) {\n    store.dispatch(fetchPost(postId));\n    store.dispatch(END);\n  }\n\n  await store.sagaTask.toPromise();\n});\nexport default PostPage;","map":{"version":3,"sources":["D:/Dima/d-t-t-e/pages/posts/[postId].tsx"],"names":["React","END","wrapper","fetchPost","getPostsListAPI","PostDetails","PostPage","getStaticPaths","posts","console","log","paths","map","post","params","postId","id","toString","fallback","getStaticProps","getServerSideProps","store","getState","postReducer","data","dispatch","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,OAAT,QAAmC,yBAAnC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAvB;;AAEA,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAMC,KAAK,GAAG,MAAMJ,eAAe,EAAnC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,KAAK,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,KAAW;AACjCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAEF,IAAI,CAACG,EAAL,CAAQC,QAAR;AAAV;AADyB,GAAX,CAAV,CAAd;AAIA,SAAO;AAAEN,IAAAA,KAAF;AAASO,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD,CARM;AAUP,OAAO,MAAMC,cAA8B,GAAGjB,OAAO,CAACkB,kBAAR,CAC5C,OAAO;AAAEN,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF,GAAV;AAAsBM,EAAAA;AAAtB,CAAP,KAAyC;AACvC,MAAI,CAACA,KAAK,CAACC,QAAN,GAAiBC,WAAjB,CAA6BC,IAAlC,EAAwC;AACtCH,IAAAA,KAAK,CAACI,QAAN,CAAetB,SAAS,CAACY,MAAD,CAAxB;AACAM,IAAAA,KAAK,CAACI,QAAN,CAAexB,GAAf;AACD;;AAED,QAAOoB,KAAD,CAAqBK,QAArB,CAA8BC,SAA9B,EAAN;AACD,CAR2C,CAAvC;AAWP,eAAerB,QAAf","sourcesContent":["import React from \"react\";\r\nimport { GetStaticPaths, GetStaticProps } from \"next\";\r\nimport { END } from \"redux-saga\";\r\nimport { wrapper, SagaStore } from \"../../redux/store/store\";\r\nimport { fetchPost } from \"../../redux/actions/post\";\r\nimport { getPostsListAPI } from \"../../api/getPostsListAPI\";\r\n\r\nimport PostDetails from \"../../containers/PostDetails\";\r\n\r\nconst PostPage = () => <PostDetails />;\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  const posts = await getPostsListAPI();\r\n  console.log(posts);\r\n  const paths = posts.map((post) => ({\r\n    params: { postId: post.id.toString() },\r\n  }));\r\n\r\n  return { paths, fallback: false };\r\n};\r\n\r\nexport const getStaticProps: GetStaticProps = wrapper.getServerSideProps(\r\n  async ({ params: { postId }, store }) => {\r\n    if (!store.getState().postReducer.data) {\r\n      store.dispatch(fetchPost(postId as string));\r\n      store.dispatch(END as any);\r\n    }\r\n\r\n    await (store as SagaStore).sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default PostPage;\r\n"]},"metadata":{},"sourceType":"module"}