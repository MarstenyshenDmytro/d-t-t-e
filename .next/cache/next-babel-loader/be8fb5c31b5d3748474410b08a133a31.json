{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(workerSaga);\n\nimport { FETCH_POSTS_LIST, successPostsList } from \"../../actions/postsList\";\nimport { getPostsListAPI } from \"../../../api/getPostsListAPI\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(3);\n          _context.next = 3;\n          return takeLatest(FETCH_POSTS_LIST, workerSaga);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction workerSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function workerSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"QQQ\");\n          _context2.prev = 1;\n          _context2.next = 4;\n          return call(getPostsListAPI);\n\n        case 4:\n          data = _context2.sent;\n          _context2.next = 7;\n          return put(successPostsList(data));\n\n        case 7:\n          _context2.next = 11;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 9]]);\n}","map":{"version":3,"sources":["D:/Dima/d-t-t-e/redux/middlewares/sagas/index.ts"],"names":["rootSaga","workerSaga","FETCH_POSTS_LIST","successPostsList","getPostsListAPI","call","put","takeLatest","console","log","data"],"mappings":";;oDAUyBA,Q;qDAKfC,U;;AAfV,SACEC,gBADF,EAIEC,gBAJF,QAKO,yBALP;AAMA,SAASC,eAAT,QAAgC,8BAAhC;AAEA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAiD,oBAAjD;AAEA,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AACbQ,UAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AADa;AAEb,iBAAMF,UAAU,CAACL,gBAAD,EAAmBD,UAAnB,CAAhB;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKf,SAAUA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACEO,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AADF;AAAA;AAGiB,iBAAMJ,IAAI,CAACD,eAAD,CAAV;;AAHjB;AAGUM,UAAAA,IAHV;AAAA;AAII,iBAAMJ,GAAG,CAACH,gBAAgB,CAACO,IAAD,CAAjB,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {\r\n  FETCH_POSTS_LIST,\r\n  SUCCESS_POSTS_LIST,\r\n  ERROR_POSTS_LIST,\r\n  successPostsList,\r\n} from \"../../actions/postsList\";\r\nimport { getPostsListAPI } from \"../../../api/getPostsListAPI\";\r\n\r\nimport { call, put, takeLatest, all, fork } from \"redux-saga/effects\";\r\n\r\nexport default function* rootSaga() {\r\n  console.log(3);\r\n  yield takeLatest(FETCH_POSTS_LIST, workerSaga);\r\n}\r\n\r\nfunction* workerSaga() {\r\n  console.log(\"QQQ\");\r\n  try {\r\n    const data = yield call(getPostsListAPI);\r\n    yield put(successPostsList(data));\r\n  } catch (e) {}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}