{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Dima\\\\d-t-t-e\\\\containers\\\\NewPost\\\\NewPost.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { newPostPush } from \"../../redux/actions/newPost\";\nimport Form, { Field, Input, Textarea } from \"../../components/form\";\nimport Button from \"../../components/Button\";\nimport InfoMsg from \"./InfoMsg/InfoMsg\";\nimport { NewPostContainer } from \"./styledComponents\";\nvar validators = {\n  title: {\n    required: \"This field is required\"\n  },\n  text: {\n    required: \"This field is required\"\n  }\n};\n\nvar NewPost = function NewPost(_ref) {\n  var loading = _ref.loading,\n      error = _ref.error,\n      isSuccessed = _ref.isSuccessed,\n      newPostPush = _ref.newPostPush;\n\n  var onSubmit = function onSubmit(data, e) {\n    newPostPush(data);\n    e.target.reset();\n  };\n\n  return __jsx(NewPostContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, function (register, errors) {\n    return __jsx(React.Fragment, null, __jsx(Field, {\n      name: \"title\",\n      label: \"Post title\",\n      placeholder: \"enter post title\",\n      errors: errors,\n      component: Input,\n      register: register,\n      validator: validators.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), __jsx(Field, {\n      name: \"body\",\n      label: \"text\",\n      placeholder: \"enter text\",\n      errors: errors,\n      component: Textarea,\n      register: register,\n      validator: validators.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      type: \"submit\",\n      label: \"Add\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }));\n  }), __jsx(InfoMsg, {\n    loading: loading,\n    error: error,\n    isSuccessed: isSuccessed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = NewPost;\nexport default connect(function (state) {\n  return state.newPostReducer;\n}, {\n  newPostPush: newPostPush\n})(NewPost);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["D:/Dima/d-t-t-e/containers/NewPost/NewPost.tsx"],"names":["React","connect","newPostPush","Form","Field","Input","Textarea","Button","InfoMsg","NewPostContainer","validators","title","required","text","NewPost","loading","error","isSuccessed","onSubmit","data","e","target","reset","register","errors","state","newPostReducer"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,OAAOC,IAAP,IAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,QAA7B,QAA6C,uBAA7C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAGA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADU;AAIjBC,EAAAA,IAAI,EAAE;AACJD,IAAAA,QAAQ,EAAE;AADN;AAJW,CAAnB;;AASA,IAAME,OAAmC,GAAG,SAAtCA,OAAsC,OAKtC;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJf,WACI,QADJA,WACI;;AACJ,MAAMgB,QAAuC,GAAG,SAA1CA,QAA0C,CAACC,IAAD,EAAOC,CAAP,EAAa;AAC3DlB,IAAAA,WAAW,CAACiB,IAAD,CAAX;AACAC,IAAAA,CAAC,CAACC,MAAF,CAASC,KAAT;AACD,GAHD;;AAIA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACK,QAAD,EAAWC,MAAX;AAAA,WACC,4BACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,WAAW,EAAC,kBAHd;AAIE,MAAA,MAAM,EAAEA,MAJV;AAKE,MAAA,SAAS,EAAEnB,KALb;AAME,MAAA,QAAQ,EAAEkB,QANZ;AAOE,MAAA,SAAS,EAAEb,UAAU,CAACC,KAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,WAAW,EAAC,YAHd;AAIE,MAAA,MAAM,EAAEa,MAJV;AAKE,MAAA,SAAS,EAAElB,QALb;AAME,MAAA,QAAQ,EAAEiB,QANZ;AAOE,MAAA,SAAS,EAAEb,UAAU,CAACG,IAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAmBE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CADD;AAAA,GADH,CADF,EA0BE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAEE,OAAlB;AAA2B,IAAA,KAAK,EAAEC,KAAlC;AAAyC,IAAA,WAAW,EAAEC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF;AA8BD,CAxCD;;KAAMH,O;AA0CN,eAAeb,OAAO,CAAC,UAACwB,KAAD;AAAA,SAAWA,KAAK,CAACC,cAAjB;AAAA,CAAD,EAAkC;AAAExB,EAAAA,WAAW,EAAXA;AAAF,CAAlC,CAAP,CACbY,OADa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { SubmitHandler } from \"react-hook-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { newPostPush } from \"../../redux/actions/newPost\";\r\n\r\nimport Form, { Field, Input, Textarea } from \"../../components/form\";\r\nimport Button from \"../../components/Button\";\r\nimport InfoMsg from \"./InfoMsg/InfoMsg\";\r\n\r\nimport { NewPostPropsType, FormValuesType } from \"./types\";\r\nimport { NewPostContainer } from \"./styledComponents\";\r\n\r\nconst validators = {\r\n  title: {\r\n    required: \"This field is required\",\r\n  },\r\n  text: {\r\n    required: \"This field is required\",\r\n  },\r\n};\r\n\r\nconst NewPost: React.FC<NewPostPropsType> = ({\r\n  loading,\r\n  error,\r\n  isSuccessed,\r\n  newPostPush,\r\n}) => {\r\n  const onSubmit: SubmitHandler<FormValuesType> = (data, e) => {\r\n    newPostPush(data);\r\n    e.target.reset();\r\n  };\r\n  return (\r\n    <NewPostContainer>\r\n      <Form onSubmit={onSubmit}>\r\n        {(register, errors) => (\r\n          <>\r\n            <Field\r\n              name=\"title\"\r\n              label=\"Post title\"\r\n              placeholder=\"enter post title\"\r\n              errors={errors}\r\n              component={Input}\r\n              register={register}\r\n              validator={validators.title}\r\n            />\r\n            <Field\r\n              name=\"body\"\r\n              label=\"text\"\r\n              placeholder=\"enter text\"\r\n              errors={errors}\r\n              component={Textarea}\r\n              register={register}\r\n              validator={validators.text}\r\n            />\r\n            <Button type=\"submit\" label=\"Add\" />\r\n          </>\r\n        )}\r\n      </Form>\r\n      <InfoMsg loading={loading} error={error} isSuccessed={isSuccessed} />\r\n    </NewPostContainer>\r\n  );\r\n};\r\n\r\nexport default connect((state) => state.newPostReducer, { newPostPush })(\r\n  NewPost\r\n);\r\n"]},"metadata":{},"sourceType":"module"}