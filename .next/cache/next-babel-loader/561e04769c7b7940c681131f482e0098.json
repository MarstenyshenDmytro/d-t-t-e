{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NEW_POST_PUSH, SUCCESS_POST_PUSH, ERROR_POST_PUSH } from \"../actions/newPost\";\nvar initialState = {\n  loading: true,\n  isSuccessed: false,\n  error: false\n};\n\nvar newPostReducer = function newPostReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"__NEXT_REDUX_WRAPPER_HYDRATE__\":\n      {\n        return _objectSpread(_objectSpread({}, state), action.payload.newPostReducer);\n      }\n\n    case NEW_POST_PUSH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case SUCCESS_POST_PUSH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        isSuccessed: true\n      });\n\n    case ERROR_POST_PUSH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: true\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default newPostReducer;","map":{"version":3,"sources":["D:/Dima/d-t-t-e/redux/reducers/newPost.ts"],"names":["NEW_POST_PUSH","SUCCESS_POST_PUSH","ERROR_POST_PUSH","initialState","loading","isSuccessed","error","newPostReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,aADF,EAEEC,iBAFF,EAGEC,eAHF,QAKO,oBALP;AA6BA,IAAMC,YAA8B,GAAG;AACrCC,EAAAA,OAAO,EAAE,IAD4B;AAErCC,EAAAA,WAAW,EAAE,KAFwB;AAGrCC,EAAAA,KAAK,EAAE;AAH8B,CAAvC;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAGA;AAAA,MAFrBC,KAEqB,uEAFbL,YAEa;AAAA,MADrBM,MACqB;;AACrB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gCAAL;AAAuC;AACrC,+CAAYF,KAAZ,GAAsBC,MAAM,CAACE,OAAP,CAAeJ,cAArC;AACD;;AACD,SAAKP,aAAL;AACE,6CAAYQ,KAAZ;AAAmBJ,QAAAA,OAAO,EAAE;AAA5B;;AACF,SAAKH,iBAAL;AACE,6CAAYO,KAAZ;AAAmBJ,QAAAA,OAAO,EAAE,KAA5B;AAAmCC,QAAAA,WAAW,EAAE;AAAhD;;AACF,SAAKH,eAAL;AACE,6CAAYM,KAAZ;AAAmBJ,QAAAA,OAAO,EAAE,KAA5B;AAAmCE,QAAAA,KAAK,EAAE;AAA1C;;AACF;AACE,+BAAYE,KAAZ;AAXJ;AAaD,CAjBD;;AAmBA,eAAeD,cAAf","sourcesContent":["import {\r\n  NEW_POST_PUSH,\r\n  SUCCESS_POST_PUSH,\r\n  ERROR_POST_PUSH,\r\n  DataType,\r\n} from \"../actions/newPost\";\r\n\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nexport type InitialStateType = {\r\n  loading: boolean;\r\n  isSuccessed: boolean;\r\n  error: boolean;\r\n};\r\n\r\ntype ActionPayloadType = {\r\n  data?: DataType;\r\n  newPostReducer?: InitialStateType;\r\n};\r\n\r\ntype ActionType = {\r\n  type:\r\n    | typeof NEW_POST_PUSH\r\n    | typeof HYDRATE\r\n    | typeof SUCCESS_POST_PUSH\r\n    | typeof ERROR_POST_PUSH;\r\n  payload?: ActionPayloadType;\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  loading: true,\r\n  isSuccessed: false,\r\n  error: false,\r\n};\r\n\r\nconst newPostReducer = (\r\n  state = initialState,\r\n  action: ActionType\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case \"__NEXT_REDUX_WRAPPER_HYDRATE__\": {\r\n      return { ...state, ...action.payload.newPostReducer };\r\n    }\r\n    case NEW_POST_PUSH:\r\n      return { ...state, loading: true };\r\n    case SUCCESS_POST_PUSH:\r\n      return { ...state, loading: false, isSuccessed: true };\r\n    case ERROR_POST_PUSH:\r\n      return { ...state, loading: false, error: true };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default newPostReducer;\r\n"]},"metadata":{},"sourceType":"module"}