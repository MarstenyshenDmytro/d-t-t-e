{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { successPost, errorPost } from \"../../actions/post\";\nimport { getPostAPI } from \"../../../api/getPostAPI\";\nimport { call, put } from \"redux-saga/effects\";\n\nfunction postSaga(id) {\n  var data;\n  return _regeneratorRuntime.wrap(function postSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getPostAPI, id);\n\n        case 3:\n          data = _context.sent;\n          _context.next = 6;\n          return put(successPost(data));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(errorPost());\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nexport default postSaga;","map":{"version":3,"sources":["D:/Dima/d-t-t-e/redux/middlewares/saga/postSaga.ts"],"names":["postSaga","successPost","errorPost","getPostAPI","call","put","id","data"],"mappings":";;oDAKUA,Q;;AALV,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;;AAGA,SAAUL,QAAV,CAAmBM,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMF,IAAI,CAACD,UAAD,EAAaG,EAAb,CAAV;;AAFjB;AAEUC,UAAAA,IAFV;AAAA;AAGI,iBAAMF,GAAG,CAACJ,WAAW,CAACM,IAAD,CAAZ,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMF,GAAG,CAACH,SAAS,EAAV,CAAT;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAeF,QAAf","sourcesContent":["import { successPost, errorPost } from \"../../actions/post\";\r\nimport { getPostAPI } from \"../../../api/getPostAPI\";\r\nimport { call, put } from \"redux-saga/effects\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nfunction* postSaga(id: AnyAction) {\r\n  try {\r\n    const data = yield call(getPostAPI, id);\r\n    yield put(successPost(data));\r\n  } catch (e) {\r\n    yield put(errorPost());\r\n  }\r\n}\r\n\r\nexport default postSaga;\r\n"]},"metadata":{},"sourceType":"module"}