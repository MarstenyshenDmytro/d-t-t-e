{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { successPost, errorPost } from \"../../actions/post\";\nimport { getPostAPI } from \"../../../api/getPostAPI\";\nimport { call, put } from \"redux-saga/effects\";\n\nfunction* postSaga({\n  payload: {\n    id\n  }\n}) {\n  try {\n    const data = yield call(getPostAPI, id);\n    yield put(successPost(_objectSpread(_objectSpread({}, data), {}, {\n      comments: data.comments.reverse()\n    })));\n  } catch (e) {\n    yield put(errorPost());\n  }\n}\n\nexport default postSaga;","map":{"version":3,"sources":["D:/Dima/d-t-t-e/redux/middlewares/saga/postSaga.ts"],"names":["successPost","errorPost","getPostAPI","call","put","postSaga","payload","id","data","comments","reverse","e"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;;AAGA,UAAUC,QAAV,CAAmB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAX,CAAnB,EAAmD;AACjD,MAAI;AACF,UAAMC,IAAI,GAAG,MAAML,IAAI,CAACD,UAAD,EAAaK,EAAb,CAAvB;AACA,UAAMH,GAAG,CAACJ,WAAW,iCAAMQ,IAAN;AAAYC,MAAAA,QAAQ,EAAED,IAAI,CAACC,QAAL,CAAcC,OAAd;AAAtB,OAAZ,CAAT;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,UAAMP,GAAG,CAACH,SAAS,EAAV,CAAT;AACD;AACF;;AAED,eAAeI,QAAf","sourcesContent":["import { successPost, errorPost } from \"../../actions/post\";\r\nimport { getPostAPI } from \"../../../api/getPostAPI\";\r\nimport { call, put } from \"redux-saga/effects\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nfunction* postSaga({ payload: { id } }: AnyAction) {\r\n  try {\r\n    const data = yield call(getPostAPI, id);\r\n    yield put(successPost({ ...data, comments: data.comments.reverse() }));\r\n  } catch (e) {\r\n    yield put(errorPost());\r\n  }\r\n}\r\n\r\nexport default postSaga;\r\n"]},"metadata":{},"sourceType":"module"}