{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport postsListReducer from \"../reducers/postsList\";\nimport rootSaga from \"../middlewares/sagas/index\";\n\nfunction configureStore(preloadedState, _ref) {\n  var isServer = _ref.isServer,\n      _ref$req = _ref.req,\n      req = _ref$req === void 0 ? null : _ref$req;\n  var sagaMiddleware = createSagaMiddleware();\n  var store = createStore(postsListReducer, preloadedState, applyMiddleware(sagaMiddleware));\n\n  if (req || !isServer) {\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n  }\n\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["D:/Dima/d-t-t-e/redux/store/store.ts"],"names":["createStore","applyMiddleware","createSagaMiddleware","postsListReducer","rootSaga","configureStore","preloadedState","isServer","req","sagaMiddleware","store","sagaTask","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,SAASC,cAAT,CAAwBC,cAAxB,QAA4E;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,sBAAnBC,GAAmB;AAAA,MAAnBA,GAAmB,yBAAb,IAAa;AAC1E,MAAMC,cAAc,GAAGP,oBAAoB,EAA3C;AACA,MAAMQ,KAAK,GAAGV,WAAW,CACvBG,gBADuB,EAEvBG,cAFuB,EAGvBL,eAAe,CAACQ,cAAD,CAHQ,CAAzB;;AAMA,MAAID,GAAG,IAAI,CAACD,QAAZ,EAAsB;AACnBG,IAAAA,KAAD,CAAeC,QAAf,GAA0BF,cAAc,CAACG,GAAf,CAAmBR,QAAnB,CAA1B;AACD;;AAED,SAAOM,KAAP;AACD;;AAED,eAAeL,cAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport postsListReducer from \"../reducers/postsList\";\r\nimport rootSaga from \"../middlewares/sagas/index\";\r\n\r\nfunction configureStore(preloadedState: any, { isServer, req = null }: any) {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(\r\n    postsListReducer,\r\n    preloadedState,\r\n    applyMiddleware(sagaMiddleware)\r\n  );\r\n\r\n  if (req || !isServer) {\r\n    (store as any).sagaTask = sagaMiddleware.run(rootSaga);\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}